* ATALHOS
- M-enter - tocar!
- C-i - documentação
- M-a - select all
- M-{ - buffer left
- M-} - buffer right
- M-/ - comentario

* PLAY
~play note (symbol_or_number)~
- arg float -> ~play 60.5~
- arg com nome de nota -> ~play :e5~ / ~play :fs3~
- arg notação de acordes -> ~play chord(:e3,:M7)~
- arg para pausa -> ~play :r~

** FUNÇÕES RELACIONADAS
*** play_chord notes (list)
~play_chord [60, 65, 70]~
*** play_pattern notes (list)
- aparentemente a duração da somatória do envelope /precisa/ ser um segundo. 
- então ~play_pattern [60, 61, 62], release: 0.2~ não se comporta como ~play 60, release: 0.2~, mas sim ~play_pattern [60, 61, 62], attack: 0, sustain: 0, release: 0.2~


* SLEEP
~sleep beats (number)~
- arg em unidades de tempo (não é segundo...). subordinado ao valor de ~use_bpm~
- aceita arg como float, mas com encrencas de tipologia estilo Max/JS. ~sleep 1/3~ não funciona. requer ~sleep 1.0/3~
- sobre tipologia em ruby: http://www.rubyfleebie.com/2007/07/09/ruby-is-dynamically-and-strongly-typed/

#+BEGIN_SRC ruby
# agora dá para tocar em compasso composto...
colecao = scale(:e, :messiaen6)
loop do
  play colecao.shuffle.tick
  sleep 1.0/[3, 6].choose
end
#+END_SRC

* SAMPLE
~sample name_or_path (symbol or string)~

* DÚVIDAS
- amp_slide

* REFERÊNCIAS
- https://www.raspberrypi.org/magpi/sonic-pi-coded-beats/
- https://www.raspberrypi.org/magpi/issues/essentials-sonic-pi-v1/
- http://sonic-pi.mehackit.org/exercises/en/01-introduction/01-introduction.html
- http://ecotronics.ch.honorius.sui-inter.net/wordpress/2017/sonic-pi-advanced-programming/
